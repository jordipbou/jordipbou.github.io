{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../Editor.svelte"
  ],
  "sourcesContent": [
    "<script>\nimport { onMount } from 'svelte';\nimport Editor, { getContent, setContent } from './Editor.svelte'\nimport Toolbar from './Toolbar.svelte'\nimport FileBrowser from './FileBrowser.svelte'\nimport FileSaveDialog from './FileSaveDialog.svelte'\n\nlet editor\n\nlet full_screen = true\t// or split screen\nlet editor_hidden = false\nlet file_browser_hidden = true\nlet file_save_dialog_hidden = true\n\nlet current_filename = 'untitled.js'\n\nlet files = []\n\nfunction listFiles() {\n\tlet json_files = window.localStorage.getItem('files')\n\tif (json_files !== null) {\n\t\tfiles = JSON.parse(json_files)\n\t}\n}\n\nonMount(() => {\n\tlistFiles()\n})\n\nfunction toggleEditor() {\n\teditor_hidden = !editor_hidden\n}\n\nfunction toggleViewMode() {\n\tfull_screen = !full_screen\n}\n\nfunction handleKeydown(e) {\n\tif (e.ctrlKey && e.shiftKey) {\n\t\tswitch (e.keyCode) {\n\t\t\tcase 80: toggleEditor(); break;\n\t\t\tcase 77: toggleViewMode(); break;\n\t\t\tcase 76: console.clear(); break;\n\t\t}\n\t}\n}\n\nfunction openFileBrowser() {\n\tif (file_browser_hidden) {\n\t\tfile_browser_hidden = false\n\t}\n}\n\nfunction hideFileBrowser() {\n\tif (!file_browser_hidden) {\n\t\tfile_browser_hidden = true\n\t}\n}\n\nfunction openFileSaveDialog() {\n\tif (file_save_dialog_hidden) {\n\t\tfile_save_dialog_hidden = false\n\t}\n}\n\nfunction hideFileSaveDialog() {\n\tif (!file_save_dialog_hidden) {\n\t\tfile_save_dialog_hidden = true\n\t}\n}\n\nfunction saveFile() {\n\tlet content = getContent(editor)\n\twindow.localStorage.setItem(current_filename, content)\n\tif (!files.includes(current_filename)) {\n\t\tfiles = files.concat(current_filename)\n\t\twindow.localStorage.setItem('files', JSON.stringify(files))\n\t}\n\tfile_save_dialog_hidden = true\n}\n\nfunction removeFile(event) {\n\tlet filename = event.detail\n\twindow.localStorage.removeItem(filename)\n\tfiles = files.filter(i => i !== filename)\n\twindow.localStorage.setItem('files', JSON.stringify(files))\n}\n\nfunction loadFile(event) {\n\tcurrent_filename = event.detail[0]\n\tsetContent(event.detail[1])\n}\n\nfunction filenameChanged(filename) {\n\tcurrent_filename = filename\n}\n</script>\n\n<style>\n.full-screen {\n\t@apply absolute top-0 left-0 w-full h-full;\n}\n\n.split-screen {\n\t@apply relative w-1/2 h-full;\n}\n\n.editor-full {\n\t@apply z-10 opacity-75;\n}\n</style>\n\n<svelte:window on:keydown={handleKeydown}/>\n\n<main class=\"w-screen h-screen flex flex-row\">\n\t<div class:full-screen={full_screen} \n\t\t class:editor-full={full_screen} \n\t\t class:split-screen={!full_screen} \n\t\t class:hidden={editor_hidden}>\n\t\t<Editor bind:this={editor}/>\n\t</div>\n\t<div id=\"preview\" \n\t\t class:full-screen={full_screen}\n\t\t class:split-screen={!full_screen}>\n\t</div>\n\t<div class=\"absolute top-0 right-0 z-20\">\n\t\t<Toolbar columns={!full_screen} \n\t\t\t\t on:hideEditor={toggleEditor}\n\t\t\t\t on:changeViewMode={toggleViewMode}\n\t\t\t\t on:openFileBrowser={openFileBrowser}\n\t\t\t\t on:openFileSaveDialog={openFileSaveDialog}/>\n\t</div>\n\t<div class=\"w-full h-full z-50\"\n\t\t class:hidden={file_browser_hidden}>\n\t\t<FileBrowser bind:files\n\t\t\t\t\t on:hideFileBrowser={hideFileBrowser}\n\t\t\t\t\t on:removeFile={removeFile}\n\t\t\t\t\t on:loadFile={loadFile}/>\n\t</div>\n\t<div class=\"w-full h-full z-50\"\n\t\t class:hidden={file_save_dialog_hidden}>\n\t\t<FileSaveDialog bind:filename={current_filename}\n\t\t\t\t\t    on:hideFileSaveDialog={hideFileSaveDialog}\n\t\t\t\t\t\ton:saveFile={saveFile}\n\t\t\t\t\t\ton:filenameChanged={filenameChanged}/>\n\t</div>\n</main>\n",
    "<script context=\"module\">\nlet cm\n\nexport function getContent() {\n\treturn cm.doc.getValue()\n}\n\nexport function setContent(content) {\n\tcm.doc.setValue(content)\n}\n</script>\n\n<script>\nimport { onMount } from 'svelte';\nimport CodeMirror from 'codemirror/lib/codemirror.js';\nimport 'codemirror/mode/javascript/javascript.js';\nimport 'codemirror/addon/hint/show-hint.js';\nimport 'codemirror/addon/hint/javascript-hint.js';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/mbo.css';\nimport 'codemirror/addon/hint/show-hint.css';\n\nlet editor\n\nonMount(() => {\n\tsetTimeout(() => {\n\t\tcm = CodeMirror(\n\t\t\teditor,\n\t\t\t{\n\t\t\t\tlineNumbers: true,\n\t\t\t\tmode: {\n\t\t\t\t\tname: 'javascript',\n\t\t\t\t\tglobalVars: true\n\t\t\t\t},\n\t\t\t\ttheme: 'mbo',\n\t\t\t\textraKeys: {\n\t\t\t\t\t\"Ctrl-Space\": \"autocomplete\",\n\t\t\t\t\t\"Ctrl-Enter\": function(cm) {\n\t\t\t\t\t\t// Evaluate current selection or current line\n\t\t\t\t\t\t// if no selection is present.\n\t\t\t\t\t\tlet sel = cm.doc.getSelection();\n\t\t\t\t\t\tlet txt;\n\t\t\t\t\t\tif (sel === '') {\n\t\t\t\t\t\t\tlet line = cm.doc.getCursor().line;\n\t\t\t\t\t\t\ttxt = cm.doc.getLine(line);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttxt = sel;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconsole.log(window.eval(txt));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}, 250);\n});\n</script>\n\n<style>\n:global(.CodeMirror) {\n\theight: 100% !important;\n}\n</style>\n\n<div bind:this={editor} class=\"w-full h-full bg-gray-400\">\n</div>\n"
  ],
  "names": [],
  "mappings": "AAmGA,YAAY,eAAC,CAAC,AACb,OAAO,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,AAC5C,CAAC,AAED,aAAa,eAAC,CAAC,AACd,OAAO,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,AAC9B,CAAC,AAED,YAAY,eAAC,CAAC,AACb,OAAO,IAAI,CAAC,UAAU,CAAC,AACxB,CAAC;ACnDO,WAAW,AAAE,CAAC,AACrB,MAAM,CAAE,IAAI,CAAC,UAAU,AACxB,CAAC"
}