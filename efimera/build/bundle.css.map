{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\App.svelte",
    "..\\..\\Editor.svelte"
  ],
  "sourcesContent": [
    "<script>\r\nimport Editor from './Editor.svelte'\r\nimport Toolbar from './Toolbar.svelte'\r\n\r\nlet full_screen = true;\t// or split screen\r\nlet editor_hidden = false;\r\n\r\nfunction toggleEditor() {\r\n\teditor_hidden = !editor_hidden;\r\n}\r\n\r\nfunction toggleViewMode() {\r\n\tfull_screen = !full_screen;\r\n}\r\n\r\nfunction handleKeydown(e) {\r\n\tif (e.ctrlKey && e.shiftKey) {\r\n\t\tswitch (e.keyCode) {\r\n\t\t\tcase 80: toggleEditor(); break;\r\n\t\t\tcase 77: toggleViewMode(); break;\r\n\t\t}\r\n\t}\r\n}\r\n</script>\r\n\r\n<style>\r\n.full-screen {\r\n\t@apply absolute top-0 left-0 w-full h-full;\r\n}\r\n\r\n.split-screen {\r\n\t@apply relative w-1/2 h-full;\r\n}\r\n\r\n.editor-full {\r\n\t@apply z-10 opacity-75;\r\n}\r\n</style>\r\n\r\n<svelte:window on:keydown={handleKeydown}/>\r\n\r\n<main class=\"w-screen h-screen flex flex-row\">\r\n\t<div class:full-screen={ full_screen } \r\n\t\t class:editor-full={ full_screen } \r\n\t\t class:split-screen={ !full_screen } \r\n\t\t class:hidden={ editor_hidden }>\r\n\t\t<Editor/>\r\n\t</div>\r\n\t<div id=\"preview\" \r\n\t\t class:full-screen={ full_screen }\r\n\t\t class:split-screen={ !full_screen }>\r\n\t</div>\r\n\t<div class=\"absolute top-0 right-0 z-20\">\r\n\t\t<Toolbar columns={ !full_screen } \r\n\t\t\t\t on:hideEditor={ toggleEditor }\r\n\t\t\t\t on:changeViewMode={ toggleViewMode }/>\r\n\t</div>\r\n</main>\r\n",
    "<script>\r\nimport { onMount } from 'svelte';\r\nimport CodeMirror from 'codemirror/lib/codemirror.js';\r\nimport 'codemirror/mode/javascript/javascript.js';\r\nimport 'codemirror/addon/hint/show-hint.js';\r\nimport 'codemirror/addon/hint/javascript-hint.js';\r\nimport 'codemirror/lib/codemirror.css';\r\nimport 'codemirror/theme/mbo.css';\r\nimport 'codemirror/addon/hint/show-hint.css';\r\n\r\nlet editor;\r\n\r\nonMount(() => {\r\n\tsetTimeout(() => {\r\n\t\tlet cm = CodeMirror(\r\n\t\t\teditor,\r\n\t\t\t{\r\n\t\t\t\tlineNumbers: true,\r\n\t\t\t\tmode: {\r\n\t\t\t\t\tname: 'javascript',\r\n\t\t\t\t\tglobalVars: true\r\n\t\t\t\t},\r\n\t\t\t\ttheme: 'mbo',\r\n\t\t\t\textraKeys: {\r\n\t\t\t\t\t\"Ctrl-Space\": \"autocomplete\",\r\n\t\t\t\t\t\"Ctrl-Enter\": function(cm) {\r\n\t\t\t\t\t\t// Evaluate current selection or current line\r\n\t\t\t\t\t\t// if no selection is present.\r\n\t\t\t\t\t\tlet sel = cm.doc.getSelection();\r\n\t\t\t\t\t\tlet txt;\r\n\t\t\t\t\t\tif (sel === '') {\r\n\t\t\t\t\t\t\tlet line = cm.doc.getCursor().line;\r\n\t\t\t\t\t\t\ttxt = cm.doc.getLine(line);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\ttxt = sel;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconsole.log(window.eval(txt));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}, 250);\r\n});\r\n</script>\r\n\r\n<style>\r\n:global(.CodeMirror) {\r\n\theight: 100% !important;\r\n}\r\n</style>\r\n\r\n<div bind:this={editor} class=\"w-full h-full bg-gray-400\">\r\n</div>\r\n"
  ],
  "names": [],
  "mappings": "AA0BA,YAAY,aAAC,CAAC,AACb,OAAO,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,AAC5C,CAAC,AAED,aAAa,aAAC,CAAC,AACd,OAAO,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,AAC9B,CAAC,AAED,YAAY,aAAC,CAAC,AACb,OAAO,IAAI,CAAC,UAAU,CAAC,AACxB,CAAC;ACUO,WAAW,AAAE,CAAC,AACrB,MAAM,CAAE,IAAI,CAAC,UAAU,AACxB,CAAC"
}