/* #### Generated By: http://www.cufonfonts.com #### */

@font-face {
font-family: 'monofur';
font-style: normal;
font-weight: normal;
src: local('monofur'), url('monof55.woff') format('woff');
}

@font-face {
font-family: 'monofur   italic';
font-style: normal;
font-weight: normal;
src: local('monofur   italic'), url('monof56.woff') format('woff');
}

:root {
    /* Solarized colors */
	--base03:    #002b36;
	--base02:    #073642;
	--base01:    #586e75;
	--base00:    #657b83;
	--base0:     #839496;
	--base1:     #93a1a1;
	--base2:     #eee8d5;
	--base3:     #fdf6e3;
	--yellow:    #b58900;
	--orange:    #cb4b16;
	--red:       #dc322f;
	--magenta:   #d33682;
	--violet:    #6c71c4;
	--blue:      #268bd2;
	--cyan:      #2aa198;
	--green:     #859900;

	--term-background: var(--base03);
	--term-background-inverted: var(--base3);
	--term-color: var(--base0);
	--term-color-inverted: var(--base03);
	--autocompletion-color: var(--orange);
	--autocompletion-color-inverted: var(--orange);
	--autocompletions-background: var(--base02);
	--autocompletions-color: var(--orange);
	--result-background: var(--base03);
	--result-undefined-line: var(--base02);
	--result-undefined-color: var(--base01);
	--result-boolean-color: var(--yellow);
	--result-number-color: var(--yellow);
	--result-string-color: var(--green);
	--result-key-color: var(--base01);
	--result-function-color: var(--violet);
}

/* ---------------------------------------------------- Pretty printing */

.result { display: block; 
          width: 100%; }

.result > .condensed > .collapsed { display: none; }

.result > .condensed > .condensed { display: inline-flex; }

.result > .condensed > .expanded { display: none; }

.result > .collapsed > .condensed { display: none; }

.result > .collapsed > .collapsed { display: block; }

.result > .collapsed > .expanded { display: none; }

.result > .expanded > .condensed { display: none; }

.result > .expanded > .collapsed { display: none; }

.result > .expanded > .expanded { display: block; }

e-output > .pp-undefined { display: block; 
                           height: 3px;
						   width: 100%;
					       background: var(--result-undefined-line); 
						   font-size: 0em; }

.pp-undefined { color: var(--result-undefined-color); }

.pp-boolean { color: var(--result-boolean-color); }

.pp-number { color: var(--result-number-color); }

.pp-string { color: var(--result-string-color); }

.pp-string > .collapsed > .collapsed  { white-space: nowrap;
									    display: block;
									    overflow: hidden;
						  			    text-overflow: ellipsis; 
						  			    width: 100%; }

.pp-array-item > .pp-string > .collapsed > .collapsed {
  width: calc(100% - 1em);
}

.pp-array > .collapsed > .collapsed { overflow: hidden;
                                      text-overflow: ellipsis;
									  white-space: nowrap; }

.pp-array > .collapsed > .collapsed > .result { display: inline; }

.pp-array > .expanded > .expanded { display: block; }

.pp-array > .expanded > .expanded > .pp-array-item { 
  display: block; 
  padding-left: 1em; 
  width: calc(100% - 1em);
}

.pp-object > .collapsed > .collapsed { display: flex; 
                                       white-space: nowrap;
									   overflow: hidden; }

.pp-object > .collapsed > .collapsed > .pp-object-property {
  display: flex;
}

.pp-object > .expanded > .expanded { display: flex;
                                     flex-direction: column; }

.pp-object > .expanded > .expanded > .pp-object-property { 
  display: flex;
  padding-left: 1em;
}

.pp-key { color: var(--result-key-color); }

.pp-function { color: var(--result-function-color); }

.pp-function > .collapsed > .collapsed  { white-space: nowrap;
									    display: block;
									    overflow: hidden;
						  			    text-overflow: ellipsis; 
						  			    width: 100%; }

.pp-array-item > .pp-function > .collapsed > .collapsed {
  width: calc(100% - 1em);
}

.pp-function > .expanded > .expanded > .pp-code { white-space: pre; }

html, body {
	width: 100vw;
	height: 100vh;
	margin: 0px;
	padding: 0px;
}

body {
	background-color: var(--term-background);
	color: var(--term-color);
	font-family: 'monofur', monospace;
}

e-session { display: block;
            width: 100%;
			height: 100%; }

e-term { display: block;
         width: 100%;
		 height: 100%; }

.info-bars { width: 100%;
             position: absolute;
			 bottom: 0px;
			 left: 0px;
			 display: flex;
			 flex-direction: column; }

e-completions { width: 100%;
                background: var(--autocompletions-background);
                color: var(--autocompletions-color);
                overflow-x: hidden;
                text-overflow: ellipsis; }

.completion { margin-left: 5px;
              margin-right: 5px; }

e-error { display: block;
          width: 100%; 
		  background: var(--red);
		  color: var(--base03); }

e-input { display: block;
          width: 100%; }

#block-input-container { min-height: 1rem; }

#block-input-container:focus { outline-style: none; }

e-output { display: block;
           min-width: 100vw; 
           line-height: 1em;
           background: var(--result-background); }

e-export-json { width: 90vw; }

.json-export-header { display: flex;
                      flex-direction: row;
					  justify-content: space-between; }

.json-export-header div { display: flex; }

.json-export-preview { width: 80vw; }

e-import-json textarea { width: 80vw; }

e-import-json p { color: red }

.line { min-height: 1em;
        line-height: 1;
        padding: 0em;
        margin: 0em; }

.line:focus { outline-style: none; }

.caret { min-width: 0.5em;
         animation: blink .75s step-end infinite; }

@keyframes blink { from, to { background-color: var(--term-background-inverted); 
                              color: var(--term-color-inverted); }
                   50% { background-color: var(--term-background);
                         color: var(--term-color); } }

.autocompletion .caret { animation: auto-blink .75s step-end infinite; }

@keyframes auto-blink { 
  from, to { background-color: var(--term-background-inverted);
             color: var(--autocompletion-color-inverted); }
  50% { background-color: var(--term-background);
        color: var(--autocompletion-color); } }

.autocompletion { color: var(--autocompletion-color); }
